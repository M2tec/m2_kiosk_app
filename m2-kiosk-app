#!/bin/python3

import argparse
import gi
import json
from pprint import pprint

from m2_util import *
from m2_transaction import *

gi.require_version("Gtk", "3.0")
gi.require_version('Soup', '2.4')
from gi.repository import Gio, GLib, Gtk, GdkPixbuf, Soup


# Handle command line arguments
parser = argparse.ArgumentParser(description='M2 Kiosk App for processing blockchain payments.')
parser.add_argument('-t', '--test-mode', help='Start in test mode')
parser.add_argument('-p', '--odoo-port', help='Specify Odoo port number')
args = parser.parse_args(['--odoo-port', '8069'])

odoo_port = args.odoo_port
wallet_port = 8090

builder = Gtk.Builder()
builder.add_from_file("/usr/share/m2-kiosk-app/paypad.glade")
amount_label = builder.get_object("amount_label")
window1 = builder.get_object("window1")

headerbar = Gtk.HeaderBar()
headerbar.set_title("M2 PayPad")
headerbar.set_show_close_button(False)
window1.set_titlebar(headerbar)

image1 = builder.get_object("image1")
pixbuf = GdkPixbuf.Pixbuf.new_from_file('/usr/share/m2-kiosk-app/static/m2tec_logo_github.png')
pixbuf = pixbuf.scale_simple(380, 380, GdkPixbuf.InterpType.BILINEAR)
image1.set_from_pixbuf(pixbuf)

payment_box = builder.get_object("payment_box")


# Handle payment request for the gamechanger wallet
def payment_request(server, message, path, query, client_context, data):
    print('-------- server callback ----------')

    json_dict = json.loads(message.request_body.data)
    #pprint(json_dict)

    transaction_id = json_dict["transaction_id"]
    wallet_address = json_dict["wallet_address"]
    pay_amount = json_dict["requested_amount"]

    create_qr_code(transaction_id, wallet_address, pay_amount)


    qr_code_file_name = '/tmp/shop_qr_code-' + transaction_id + '.png'
    pixbuf = GdkPixbuf.Pixbuf.new_from_file(qr_code_file_name)
    pixbuf = pixbuf.scale_simple(380, 380, GdkPixbuf.InterpType.BILINEAR)
    image1.set_from_pixbuf(pixbuf)

    amount_label.set_text("{:.2f}".format(pay_amount))
    payment_box.show()
    message.set_status(200)


# Handle payment request for the gamechanger wallet
def clear_display_request(server, message, path, query, client_context, data):
    payment_box.hide()

    pixbuf2 = GdkPixbuf.Pixbuf.new_from_file('/usr/share/m2-kiosk-app/static/m2tec_logo_github.png')
    pixbuf2 = pixbuf.scale_simple(380, 380, GdkPixbuf.InterpType.BILINEAR)
    #print('Setting pixbuf')
    image1.set_from_pixbuf(pixbuf2)

    message.set_status(200)


if __name__ == "__main__":

    # Check if everything is running
    #check_odoo_and_cardano(odoo_port, wallet_port)
    #check_cardano_wallets(ws)

    # Create a server to listen to requests
    server = Soup.Server()
    server.listen_local(9090, Soup.ServerListenOptions(0))
    data = ''
    server.add_handler("/payment-request", payment_request, data)
    server.add_handler("/clear-display", clear_display_request, data)
    window1.show_all()
    payment_box.hide()

    Gtk.main()

    print("Exiting...")

